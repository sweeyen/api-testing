name: .NET API Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore dependencies
      run: dotnet restore
      
    - name: üî® Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Install NUnit.ConsoleRunner
      run: nuget install NUnit.ConsoleRunner -Version 3.19.2 -DirectDownload -OutputDirectory .
         
    - name: üõ†Ô∏è Run API Tests
      run: |
        # List directory contents before test run
        dir
        # Run tests with console output and XML report
        .\NUnit.ConsoleRunner.3.19.2\tools\n|         .\NUnit.ConsoleRunner.3.19.2\tools\nunit3unit3-console.exe --timeout=600000 --labels=Before "---console.exe --timeout=600000 --labels=Before "--resultresult=TestResult.xml;format=nunit3" ".\APITesting\=TestResult.xml;format=nunit3" ".\APITesting\bin\Release\net8.0\APITesting.dll"
      
    - name: Convert Test Results to HTML
      run: |
        powershell -Command "
        $xslt = [xml](Get-Content '.\NUnit.ConsoleRunner.3.19.2\tools\NUnitTransform.xslt');
        $xml = [xml](Get-Content 'TestResult.xml');
        $transform = New-Object System.Xml.Xsl.XslCompiledTransform;
        $transform.Load($xslt);
        $writer = [System.Xml.XmlWriter]::Create('TestResult.html');
        $transform.Transform($xml, $writer);
        $writer.Close();
        "
      
    - name: Upload Test Results Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: TestResult.html

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    steps:
    - name: Deploy to GitHub Pages
      id: pages
      uses: actions/deploy-pages@v2